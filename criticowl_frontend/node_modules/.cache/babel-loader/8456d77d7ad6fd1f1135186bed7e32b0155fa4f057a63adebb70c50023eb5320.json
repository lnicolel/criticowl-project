{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar sort4FT = require('./sort4FT.js');\nvar constants = require('./constants.js');\nvar caseMap = ['other', 'lowerCase', 'upperCase', 'titleCase'];\nvar swi = require('./sentence-wise-importance.js');\nvar reconstructSpaces = require('./reconstruct-spaces.js');\n\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n// Mask for lemma in case of contraction.\nvar lemmaMask = constants.lemmaMask;\nvar its = Object.create(null);\nits.case = function (index, rdd) {\n  return caseMap[rdd.cache.property(rdd.tokens[index * tkSize], 'lutCase')];\n}; // case()\n\nits.uniqueId = function (index, rdd) {\n  return rdd.tokens[index * tkSize];\n}; // uniqueId()\n\nits.negationFlag = function (index, rdd) {\n  return rdd.tokens[index * tkSize + 3] >= constants.negationFlag;\n}; // negationFlag()\n\nits.normal = function (index, rdd) {\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  return tokens[index * tkSize + 1] > 65535 ? cache.value(cache.nox(tokens[index * tkSize + 1])) : cache.value(cache.normal(tokens[index * tkSize]));\n}; // normal()\n\nits.contractionFlag = function (index, rdd) {\n  return rdd.tokens[index * tkSize + 1] > 65535;\n}; // contractionFlag()\n\nits.pos = function (index, rdd) {\n  return rdd.cache.valueOf('pos', (rdd.tokens[index * tkSize + 2] & posMask) >>> bits4lemma); // eslint-disable-line no-bitwise\n}; // pos()\n\nits.precedingSpaces = function (index, rdd) {\n  return reconstructSpaces(index, rdd);\n}; // precedingSpaces()\n\nits.prefix = function (index, rdd) {\n  return rdd.cache.property(rdd.tokens[index * tkSize], 'prefix');\n}; // prefix()\n\nits.shape = function (index, rdd) {\n  return rdd.cache.property(rdd.tokens[index * tkSize], 'shape');\n}; // shape()\n\nits.stopWordFlag = function (index, rdd) {\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  // Apply check on normalized token and not the original value, because\n  // stop words are always defined in the lowercase.\n  var normal = tokens[index * tkSize + 1] > 65535 ? cache.nox(tokens[index * tkSize + 1]) : cache.normal(tokens[index * tkSize]);\n  return cache.property(normal, 'isStopWord') === 1;\n}; // stopWordFlag()\n\nits.abbrevFlag = function (index, rdd) {\n  return rdd.cache.property(rdd.tokens[index * tkSize], 'isAbbrev') === 1;\n}; // abbrevFlag()\n\nits.suffix = function (index, rdd) {\n  return rdd.cache.property(rdd.tokens[index * tkSize], 'suffix');\n}; // suffix()\n\nits.type = function (index, rdd) {\n  return rdd.cache.property(rdd.tokens[index * tkSize], 'tokenType');\n}; // type()\n\nits.value = function (index, rdd) {\n  return rdd.cache.value(rdd.tokens[index * tkSize]);\n}; // value()\n\nits.stem = function (index, rdd, addons) {\n  return addons.stem(rdd.cache.value(rdd.tokens[index * tkSize]));\n}; // stem()\n\nits.lemma = function (index, rdd, addons) {\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  // If it is a contraction that lemma is already available in the token's data structure.\n  if (tokens[index * tkSize + 1] > 65535) {\n    return cache.value(tokens[index * tkSize + 2] & lemmaMask); // eslint-disable-line no-bitwise\n  }\n  // Handle mapped spelling if any.\n  const mappedIdx = cache.mappedSpelling(tokens[index * tkSize]);\n  // If the token has single lemma then no further processing is needed.\n  if (cache.property(mappedIdx, 'isSLemma') === 1) {\n    return cache.value(cache.property(mappedIdx, 'lemma'));\n  }\n  // Exhausted all possibilities to avoid processing! Now lemmatize!\n  const pos = its.pos(index, rdd);\n  const value = cache.value(cache.normal(tokens[index * tkSize]));\n  return addons.lemmatize(value, pos, cache);\n}; // lemmas()\n\nits.vector = function () {\n  return new Array(100).fill(0);\n}; // vector()\n\nits.detail = function () {\n  return true;\n}; // detail()\n\nits.markedUpText = function (index, rdd) {\n  // This is a special case because `tokens.out()` allows `as.markedUpText`.\n  // Therefore simply return the value and rest is handled by `colTokensOut` with\n  // `as.markedUpText()`` or `as.text()` as one of the arugments.\n  return its.value(index, rdd);\n}; // markedUpText()\n\nits.span = function (spanItem) {\n  return spanItem.slice(0, 2);\n}; // span()\n\nits.sentiment = function (spanItem) {\n  return spanItem[3];\n}; // span()\n\nits.readabilityStats = function (rdd, addons) {\n  return addons.readabilityStats(rdd, its);\n}; // readabilityStats()\n\nits.sentenceWiseImportance = function (rdd) {\n  return swi(rdd);\n}; // sentenceWiseImportance()\n\n/* ------ utilities ------ */\n\nits.terms = function (tf, idf, terms) {\n  return terms;\n}; // terms()\n\nits.docTermMatrix = function (tf, idf, terms) {\n  const dtm = new Array(tf.length);\n  for (let id = 0; id < tf.length; id += 1) {\n    dtm[id] = [];\n    for (let i = 0; i < terms.length; i += 1) {\n      dtm[id].push(tf[id][terms[i]] || 0);\n    }\n  }\n  return dtm;\n}; // getDocTermMatrix()\n\nits.docBOWArray = function (tf) {\n  return tf;\n}; // docBOWArray()\n\nits.bow = function (tf) {\n  return tf;\n}; // bow()\n\nits.idf = function (tf, idf) {\n  var arr = [];\n  for (const t in idf) {\n    // eslint-disable-line guard-for-in\n    arr.push([t, idf[t]]);\n  }\n  // Sort on frequency followed by the term.\n  return arr.sort(sort4FT);\n}; // idf()\n\nits.tf = function (tf) {\n  const arr = [];\n  for (const t in tf) {\n    // eslint-disable-line guard-for-in\n    arr.push([t, tf[t]]);\n  }\n  // Sort on frequency followed by the term.\n  return arr.sort(sort4FT);\n}; // tf()\n\nits.modelJSON = function (tf, idf, terms, docId, sumOfAllDLs) {\n  return JSON.stringify({\n    uid: 'WinkNLP-BM25Vectorizer-Model/1.0.0',\n    tf: tf,\n    idf: idf,\n    terms: terms,\n    docId: docId,\n    sumOfAllDLs: sumOfAllDLs\n  });\n}; // model()\n\nmodule.exports = its;","map":{"version":3,"names":["sort4FT","require","constants","caseMap","swi","reconstructSpaces","tkSize","bits4lemma","posMask","lemmaMask","its","Object","create","case","index","rdd","cache","property","tokens","uniqueId","negationFlag","normal","value","nox","contractionFlag","pos","valueOf","precedingSpaces","prefix","shape","stopWordFlag","abbrevFlag","suffix","type","stem","addons","lemma","mappedIdx","mappedSpelling","lemmatize","vector","Array","fill","detail","markedUpText","span","spanItem","slice","sentiment","readabilityStats","sentenceWiseImportance","terms","tf","idf","docTermMatrix","dtm","length","id","i","push","docBOWArray","bow","arr","t","sort","modelJSON","docId","sumOfAllDLs","JSON","stringify","uid","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/its.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar sort4FT = require( './sort4FT.js' );\nvar constants = require( './constants.js' );\nvar caseMap = [ 'other', 'lowerCase', 'upperCase', 'titleCase' ];\nvar swi = require( './sentence-wise-importance.js' );\nvar reconstructSpaces = require( './reconstruct-spaces.js' );\n\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n// Mask for lemma in case of contraction.\nvar lemmaMask = constants.lemmaMask;\n\nvar its = Object.create( null );\n\nits.case = function ( index, rdd ) {\n  return caseMap[ rdd.cache.property( rdd.tokens[ index * tkSize ], 'lutCase' ) ];\n}; // case()\n\nits.uniqueId = function ( index, rdd ) {\n  return rdd.tokens[ index * tkSize ];\n}; // uniqueId()\n\nits.negationFlag = function ( index, rdd ) {\n  return rdd.tokens[ ( index * tkSize ) + 3 ] >= constants.negationFlag;\n}; // negationFlag()\n\nits.normal = function ( index, rdd ) {\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  return (\n    ( tokens[ ( index * tkSize ) + 1 ] > 65535 ) ?\n      cache.value( cache.nox( tokens[ ( index * tkSize ) + 1 ] ) ) :\n      cache.value( cache.normal( tokens[ index * tkSize ] ) )\n  );\n}; // normal()\n\nits.contractionFlag = function ( index, rdd ) {\n  return ( rdd.tokens[ ( index * tkSize ) + 1 ] > 65535 );\n}; // contractionFlag()\n\nits.pos = function ( index, rdd ) {\n  return rdd.cache.valueOf( 'pos', ( rdd.tokens[ ( index * tkSize ) + 2 ] & posMask ) >>> bits4lemma );  // eslint-disable-line no-bitwise\n}; // pos()\n\nits.precedingSpaces = function ( index, rdd ) {\n  return reconstructSpaces( index, rdd );\n}; // precedingSpaces()\n\nits.prefix = function ( index, rdd ) {\n  return rdd.cache.property( rdd.tokens[ index * tkSize ], 'prefix' );\n}; // prefix()\n\nits.shape = function ( index, rdd ) {\n  return rdd.cache.property( rdd.tokens[ index * tkSize ], 'shape' );\n}; // shape()\n\nits.stopWordFlag = function ( index, rdd ) {\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  // Apply check on normalized token and not the original value, because\n  // stop words are always defined in the lowercase.\n  var normal = ( tokens[ ( index * tkSize ) + 1 ] > 65535 ) ?\n    cache.nox( tokens[ ( index * tkSize ) + 1 ] ) :\n    cache.normal( tokens[ index * tkSize ] );\n  return ( cache.property( normal, 'isStopWord' ) === 1 );\n}; // stopWordFlag()\n\nits.abbrevFlag = function ( index, rdd ) {\n  return ( rdd.cache.property( rdd.tokens[ index * tkSize ], 'isAbbrev' ) === 1 );\n}; // abbrevFlag()\n\nits.suffix = function ( index, rdd ) {\n  return rdd.cache.property( rdd.tokens[ index * tkSize ], 'suffix' );\n}; // suffix()\n\nits.type = function ( index, rdd ) {\n  return rdd.cache.property( rdd.tokens[ index * tkSize ], 'tokenType' );\n}; // type()\n\nits.value = function ( index, rdd ) {\n  return rdd.cache.value( rdd.tokens[ index * tkSize ] );\n}; // value()\n\nits.stem = function ( index, rdd, addons ) {\n  return addons.stem( rdd.cache.value( rdd.tokens[ index * tkSize ] ) );\n}; // stem()\n\nits.lemma = function ( index, rdd, addons ) {\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  // If it is a contraction that lemma is already available in the token's data structure.\n  if ( tokens[ ( index * tkSize ) + 1 ] > 65535 ) {\n    return cache.value( tokens[ ( index * tkSize ) + 2 ] & lemmaMask ); // eslint-disable-line no-bitwise\n  }\n  // Handle mapped spelling if any.\n  const mappedIdx = cache.mappedSpelling( tokens[ index * tkSize ] );\n  // If the token has single lemma then no further processing is needed.\n  if ( cache.property( mappedIdx, 'isSLemma' ) === 1 ) {\n    return cache.value( cache.property( mappedIdx, 'lemma' ) );\n  }\n  // Exhausted all possibilities to avoid processing! Now lemmatize!\n  const pos = its.pos( index, rdd );\n  const value = cache.value( cache.normal( tokens[ index * tkSize ] ) );\n  return addons.lemmatize( value, pos, cache );\n}; // lemmas()\n\nits.vector = function ( ) {\n  return ( new Array( 100 ).fill( 0 ) );\n}; // vector()\n\nits.detail = function ( ) {\n  return true;\n}; // detail()\n\nits.markedUpText = function ( index, rdd ) {\n  // This is a special case because `tokens.out()` allows `as.markedUpText`.\n  // Therefore simply return the value and rest is handled by `colTokensOut` with\n  // `as.markedUpText()`` or `as.text()` as one of the arugments.\n  return its.value( index, rdd );\n}; // markedUpText()\n\nits.span = function ( spanItem ) {\n  return spanItem.slice( 0, 2 );\n}; // span()\n\nits.sentiment = function ( spanItem ) {\n  return spanItem[ 3 ];\n}; // span()\n\nits.readabilityStats = function ( rdd, addons ) {\n  return addons.readabilityStats( rdd, its );\n}; // readabilityStats()\n\nits.sentenceWiseImportance = function ( rdd ) {\n  return swi( rdd );\n}; // sentenceWiseImportance()\n\n/* ------ utilities ------ */\n\nits.terms = function ( tf, idf, terms ) {\n  return terms;\n}; // terms()\n\nits.docTermMatrix = function ( tf, idf, terms ) {\n  const dtm = new Array( tf.length );\n  for ( let id = 0; id < tf.length; id += 1 ) {\n    dtm[ id ] = [];\n    for ( let i = 0; i < terms.length; i += 1 ) {\n      dtm[ id ].push( tf[ id ][ terms[ i ] ] || 0 );\n    }\n  }\n  return dtm;\n}; // getDocTermMatrix()\n\nits.docBOWArray = function ( tf ) {\n  return tf;\n}; // docBOWArray()\n\nits.bow = function ( tf ) {\n  return tf;\n}; // bow()\n\nits.idf = function ( tf, idf ) {\n  var arr = [];\n  for ( const t in idf ) { // eslint-disable-line guard-for-in\n    arr.push( [ t, idf[ t ] ] );\n  }\n  // Sort on frequency followed by the term.\n  return arr.sort( sort4FT );\n}; // idf()\n\nits.tf = function ( tf ) {\n  const arr = [];\n  for ( const t in tf ) {  // eslint-disable-line guard-for-in\n    arr.push( [ t, tf[ t ] ] );\n  }\n  // Sort on frequency followed by the term.\n  return arr.sort( sort4FT );\n}; // tf()\n\nits.modelJSON = function ( tf, idf, terms, docId, sumOfAllDLs ) {\n  return JSON.stringify( {\n      uid: 'WinkNLP-BM25Vectorizer-Model/1.0.0',\n      tf: tf,\n      idf: idf,\n      terms: terms,\n      docId: docId,\n      sumOfAllDLs: sumOfAllDLs\n   } );\n}; // model()\n\nmodule.exports = its;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}