{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar locate = require('./locate.js');\n\n// ## containedEntities\n/**\n *\n * Returns the contained entities, if any within the span defined by the\n * `sentenceStart` and the `sentenceEnd`.\n *\n * @param {array} entities from where contained ones will be returned, if any.\n * @param {number} sentenceStart start of the sentence.\n * @param {number} sentenceEnd end of the sentence.\n * @return {array} of contained entities, empty if none are contained.\n * @private\n*/\nvar containedEntities = function (entities, sentenceStart, sentenceEnd) {\n  var left = locate(sentenceStart, entities);\n  var right = locate(sentenceEnd, entities);\n  var maxIndex = entities.length - 1;\n  // Contained entities.\n  var contained = [];\n  // Index left & right.\n  var kl, kr;\n  // Helper.\n  var i;\n\n  // Return empty array if span is completely on the left or right side of the\n  // `entities`.\n  if (left < 0 && right < 0 || left > maxIndex && right > maxIndex) {\n    return contained;\n  }\n\n  // The `left` must move to the next integer value to get the first index.\n  // To avoid `-0`!\n  kl = left < 0 ? 0 : Math.ceil(left);\n\n  // If both `left` and `right` are fractions & equal means nothing is contained.\n  if (left === right && kl !== left) {\n    return contained;\n  }\n\n  // Something is conatined for sure, capture it and return!\n  kr = Math.floor(right);\n  for (i = kl; i <= kr; i += 1) {\n    contained.push(i);\n  }\n  return contained;\n}; // containedEntities()\n\nmodule.exports = containedEntities;","map":{"version":3,"names":["locate","require","containedEntities","entities","sentenceStart","sentenceEnd","left","right","maxIndex","length","contained","kl","kr","i","Math","ceil","floor","push","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/contained-entities.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar locate = require( './locate.js' );\n\n// ## containedEntities\n/**\n *\n * Returns the contained entities, if any within the span defined by the\n * `sentenceStart` and the `sentenceEnd`.\n *\n * @param {array} entities from where contained ones will be returned, if any.\n * @param {number} sentenceStart start of the sentence.\n * @param {number} sentenceEnd end of the sentence.\n * @return {array} of contained entities, empty if none are contained.\n * @private\n*/\nvar containedEntities = function ( entities, sentenceStart, sentenceEnd ) {\n  var left = locate( sentenceStart, entities );\n  var right = locate( sentenceEnd, entities );\n  var maxIndex = entities.length - 1;\n  // Contained entities.\n  var contained = [];\n  // Index left & right.\n  var kl, kr;\n  // Helper.\n  var i;\n\n  // Return empty array if span is completely on the left or right side of the\n  // `entities`.\n  if ( ( left < 0 && right < 0 ) || ( left > maxIndex && right > maxIndex ) ) {\n    return contained;\n  }\n\n  // The `left` must move to the next integer value to get the first index.\n  // To avoid `-0`!\n  kl = ( left < 0 ) ? 0 : Math.ceil( left );\n\n  // If both `left` and `right` are fractions & equal means nothing is contained.\n  if ( ( left === right ) && ( kl !== left ) ) {\n    return contained;\n  }\n\n  // Something is conatined for sure, capture it and return!\n  kr = Math.floor( right );\n  for ( i = kl; i <= kr; i += 1 ) {\n    contained.push( i );\n  }\n\n  return contained;\n}; // containedEntities()\n\nmodule.exports = containedEntities;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAE,aAAc,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,SAAAA,CAAWC,QAAQ,EAAEC,aAAa,EAAEC,WAAW,EAAG;EACxE,IAAIC,IAAI,GAAGN,MAAM,CAAEI,aAAa,EAAED,QAAS,CAAC;EAC5C,IAAII,KAAK,GAAGP,MAAM,CAAEK,WAAW,EAAEF,QAAS,CAAC;EAC3C,IAAIK,QAAQ,GAAGL,QAAQ,CAACM,MAAM,GAAG,CAAC;EAClC;EACA,IAAIC,SAAS,GAAG,EAAE;EAClB;EACA,IAAIC,EAAE,EAAEC,EAAE;EACV;EACA,IAAIC,CAAC;;EAEL;EACA;EACA,IAAOP,IAAI,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,IAAQD,IAAI,GAAGE,QAAQ,IAAID,KAAK,GAAGC,QAAU,EAAG;IAC1E,OAAOE,SAAS;EAClB;;EAEA;EACA;EACAC,EAAE,GAAKL,IAAI,GAAG,CAAC,GAAK,CAAC,GAAGQ,IAAI,CAACC,IAAI,CAAET,IAAK,CAAC;;EAEzC;EACA,IAAOA,IAAI,KAAKC,KAAK,IAAQI,EAAE,KAAKL,IAAM,EAAG;IAC3C,OAAOI,SAAS;EAClB;;EAEA;EACAE,EAAE,GAAGE,IAAI,CAACE,KAAK,CAAET,KAAM,CAAC;EACxB,KAAMM,CAAC,GAAGF,EAAE,EAAEE,CAAC,IAAID,EAAE,EAAEC,CAAC,IAAI,CAAC,EAAG;IAC9BH,SAAS,CAACO,IAAI,CAAEJ,CAAE,CAAC;EACrB;EAEA,OAAOH,SAAS;AAClB,CAAC,CAAC,CAAC;;AAEHQ,MAAM,CAACC,OAAO,GAAGjB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}