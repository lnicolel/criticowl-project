{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar constants = require('../constants.js');\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Mask for preceding spaces.\nvar psMask = constants.psMask;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n\n// ### printTokens\n/**\n *\n * Prints a table of tokens along with their properties on console.\n *\n * @param {number[]} tokens The tokens.\n * @param {object} cache The language `cache`.\n * @returns {void} Nothing!\n * @private\n*/\nvar printTokens = function (tokens, cache) {\n  var imax = tokens.length;\n  var i, j;\n  var t, tv;\n  var pad = '                         ';\n  var str;\n  var props = ['prefix', 'suffix', 'shape', 'lutCase', 'nerHint', 'tokenType'];\n\n  // Print header.\n  console.log('\\n\\ntoken      p-spaces   prefix  suffix  shape   case    nerHint type     normal/pos');\n  console.log('———————————————————————————————————————————————————————————————————————————————————————');\n  for (i = 0; i < imax; i += tkSize) {\n    str = '';\n    t = tokens[i];\n    tv = cache.value(t);\n    str += (JSON.stringify(tv).replace(/\"/g, '') + pad).slice(0, 18);\n    str += ((tokens[i + 1] & psMask) + pad).slice(0, 4); // eslint-disable-line no-bitwise\n    for (j = 0; j < props.length; j += 1) {\n      str += (JSON.stringify(cache.property(t, props[j])).replace(/\"/g, '') + pad).slice(0, 8);\n    }\n    if (tokens[i + 1] > 65535) {\n      str += ' ' + cache.value(cache.nox(tokens[i + 1])); // eslint-disable-line no-bitwise\n      str += ' / ' + cache.valueOf('pos', (tokens[i + 2] & posMask) >>> bits4lemma); // eslint-disable-line no-bitwise\n    } else {\n      str += ' ' + JSON.stringify(cache.value(cache.normal(t))).replace(/\"/g, '');\n      str += ' / ' + cache.property(t, 'pos');\n    }\n\n    // str += '/' + cache.property( t, 'nerHint' );  // eslint-disable-line no-bitwise\n    console.log(str);\n    // Not being used as of now; to use move it before the console.log!\n    str += ' / ' + cache.valueOf('pos', (tokens[i + 2] & posMask) >>> bits4lemma); // eslint-disable-line no-bitwise\n  }\n\n  // Print total number of tokens.\n  console.log('\\n\\ntotal number of tokens: %d', tokens.length / tkSize);\n}; // printTokens()\n\nmodule.exports = printTokens;","map":{"version":3,"names":["constants","require","tkSize","psMask","bits4lemma","posMask","printTokens","tokens","cache","imax","length","i","j","t","tv","pad","str","props","console","log","value","JSON","stringify","replace","slice","property","nox","valueOf","normal","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/api/print-tokens.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar constants = require( '../constants.js' );\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Mask for preceding spaces.\nvar psMask = constants.psMask;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n\n\n// ### printTokens\n/**\n *\n * Prints a table of tokens along with their properties on console.\n *\n * @param {number[]} tokens The tokens.\n * @param {object} cache The language `cache`.\n * @returns {void} Nothing!\n * @private\n*/\nvar printTokens = function ( tokens, cache ) {\n  var imax = tokens.length;\n  var i, j;\n  var t, tv;\n  var pad = '                         ';\n  var str;\n  var props = [ 'prefix', 'suffix', 'shape', 'lutCase', 'nerHint', 'tokenType' ];\n\n  // Print header.\n  console.log( '\\n\\ntoken      p-spaces   prefix  suffix  shape   case    nerHint type     normal/pos' );\n  console.log( '———————————————————————————————————————————————————————————————————————————————————————' );\n  for ( i = 0; i < imax; i += tkSize ) {\n    str = '';\n    t = tokens[ i ];\n    tv = cache.value( t );\n    str += ( JSON.stringify( tv ).replace( /\"/g, '' )  + pad ).slice( 0, 18 );\n    str += ( ( tokens[ i + 1 ] & psMask ) + pad ).slice( 0, 4 );  // eslint-disable-line no-bitwise\n    for ( j = 0; j < props.length; j += 1 ) {\n      str += ( JSON.stringify( cache.property( t, props[ j ] ) ).replace( /\"/g, '' ) + pad ).slice( 0, 8 );\n    }\n    if ( tokens[ i + 1 ] > 65535 ) {\n      str += ' ' + cache.value( cache.nox( tokens[ i + 1 ] ) ); // eslint-disable-line no-bitwise\n      str += ' / ' + cache.valueOf( 'pos', ( tokens[ i + 2 ] & posMask ) >>> bits4lemma ); // eslint-disable-line no-bitwise\n    } else {\n      str += ' ' + JSON.stringify( cache.value( cache.normal( t ) ) ).replace( /\"/g, '' );\n      str += ' / ' + cache.property( t, 'pos' );\n    }\n\n    // str += '/' + cache.property( t, 'nerHint' );  // eslint-disable-line no-bitwise\n    console.log( str );\n    // Not being used as of now; to use move it before the console.log!\n    str += ' / ' + cache.valueOf( 'pos', ( tokens[ i + 2 ] & posMask ) >>> bits4lemma );  // eslint-disable-line no-bitwise\n  }\n\n  // Print total number of tokens.\n  console.log( '\\n\\ntotal number of tokens: %d', tokens.length / tkSize );\n}; // printTokens()\n\nmodule.exports = printTokens;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}