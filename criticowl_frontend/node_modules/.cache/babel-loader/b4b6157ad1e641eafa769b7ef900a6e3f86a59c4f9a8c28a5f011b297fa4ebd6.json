{"ast":null,"code":"//     wink-helpers\n//     Functions for cross validation, shuffle, cartesian product and more\n//\n//     Copyright (C) 2017-18  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-helpers”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar helpers = Object.create(null);\n\n// ### Private Functions\n\n// #### Product Reducer (Callback)\n\n// Callback function used by `reduce` inside the `product()` function.\n// Follows the standard guidelines of `reduce()` callback function.\nvar productReducer = function (prev, curr) {\n  var c,\n    cmax = curr.length;\n  var p,\n    pmax = prev.length;\n  var result = [];\n  for (p = 0; p < pmax; p += 1) {\n    for (c = 0; c < cmax; c += 1) {\n      result.push(prev[p].concat(curr[c]));\n    }\n  }\n  return result;\n}; // productReducer()\n\n// ### Public Function\n\n// ### Array Helpers\n\nhelpers.array = Object.create(null);\n\n// #### is Array\n\n// Tests if argument `v` is a JS array; returns `true` if it is, otherwise returns `false`.\nhelpers.array.isArray = function (v) {\n  return v !== undefined && v !== null && Object.prototype.toString.call(v) === '[object Array]';\n}; // isArray()\n\n// #### sorting helpers\n\n// Set of helpers to sort either numbers or strings. For key/value pairs,\n// the format for each element must be `[ key, value ]`.\n// Sort helper to sort an array in ascending order.\nhelpers.array.ascending = function (a, b) {\n  return a > b ? 1 : a === b ? 0 : -1;\n}; // ascending()\n\n// Sort helper to sort an array in descending order.\nhelpers.array.descending = function (a, b) {\n  return b > a ? 1 : b === a ? 0 : -1;\n}; // descending()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **key**.\nhelpers.array.ascendingOnKey = function (a, b) {\n  return a[0] > b[0] ? 1 : a[0] === b[0] ? 0 : -1;\n}; // ascendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **key**.\nhelpers.array.descendingOnKey = function (a, b) {\n  return b[0] > a[0] ? 1 : b[0] === a[0] ? 0 : -1;\n}; // descendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **value**.\nhelpers.array.ascendingOnValue = function (a, b) {\n  return a[1] > b[1] ? 1 : a[1] === b[1] ? 0 : -1;\n}; // ascendingOnValue()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **value**.\nhelpers.array.descendingOnValue = function (a, b) {\n  return b[1] > a[1] ? 1 : b[1] === a[1] ? 0 : -1;\n}; // descendingOnValue()\n\n// The following two functions generate a suitable function for sorting on a single\n// key or on a composite keys (max 2 only). Just a remider, the generated function\n// does not sort on two keys; instead it will sort on a key composed of the two\n// accessors.\n// Sorts in ascending order on `accessor1` & `accessor2` (optional).\nhelpers.array.ascendingOn = function (accessor1, accessor2) {\n  if (accessor2) {\n    return function (a, b) {\n      return a[accessor1][accessor2] > b[accessor1][accessor2] ? 1 : a[accessor1][accessor2] === b[accessor1][accessor2] ? 0 : -1;\n    };\n  }\n  return function (a, b) {\n    return a[accessor1] > b[accessor1] ? 1 : a[accessor1] === b[accessor1] ? 0 : -1;\n  };\n}; // ascendingOn()\n\n// Sorts in descending order on `accessor1` & `accessor2` (optional).\nhelpers.array.descendingOn = function (accessor1, accessor2) {\n  if (accessor2) {\n    return function (a, b) {\n      return b[accessor1][accessor2] > a[accessor1][accessor2] ? 1 : b[accessor1][accessor2] === a[accessor1][accessor2] ? 0 : -1;\n    };\n  }\n  return function (a, b) {\n    return b[accessor1] > a[accessor1] ? 1 : b[accessor1] === a[accessor1] ? 0 : -1;\n  };\n}; // descendingOn()\n\n// #### pluck\n\n// Plucks specified element from each element of an **array of array**, and\n// returns the resultant array. The element is specified by `i` (default `0`) and\n// number of elements to pluck are defined by `limit` (default `a.length`).\nhelpers.array.pluck = function (a, key, limit) {\n  var k, plucked;\n  k = a.length;\n  var i = key || 0;\n  var lim = limit || k;\n  if (lim > k) lim = k;\n  plucked = new Array(lim);\n  for (k = 0; k < lim; k += 1) plucked[k] = a[k][i];\n  return plucked;\n}; // pluck()\n\n// #### product\n\n// Finds the Cartesian Product of arrays present inside the array `a`. Therefore\n// the array `a` must be an array of 1-dimensional arrays. For example,\n// `product( [ [ 9, 8 ], [ 1, 2 ] ] )`\n// will produce `[ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]`.\nhelpers.array.product = function (a) {\n  return a.reduce(productReducer, [[]]);\n};\n\n// #### shuffle\n\n// Randomly shuffles the elements of an array and returns the same.\n// Reference: Chapter on Random Numbers/Shuffling in Seminumerical algorithms.\n// The Art of Computer Programming Volume II by Donald E Kunth\nhelpers.array.shuffle = function (array) {\n  var a = array;\n  var balance = a.length;\n  var candidate;\n  var temp;\n  while (balance) {\n    candidate = Math.floor(Math.random() * balance);\n    balance -= 1;\n    temp = a[balance];\n    a[balance] = a[candidate];\n    a[candidate] = temp;\n  }\n  return a;\n};\n\n// ### Object Helpers\n\nvar objectKeys = Object.keys;\nvar objectCreate = Object.create;\nhelpers.object = Object.create(null);\n\n// #### is Object\n\n// Tests if argument `v` is a JS object; returns `true` if it is, otherwise returns `false`.\nhelpers.object.isObject = function (v) {\n  return v && Object.prototype.toString.call(v) === '[object Object]' ? true : false; // eslint-disable-line no-unneeded-ternary\n}; // isObject()\n\n// #### keys\n\n// Returns keys of the `obj` in an array.\nhelpers.object.keys = function (obj) {\n  return objectKeys(obj);\n}; // keys()\n\n// #### size\n\n// Returns the number of keys of the `obj`.\nhelpers.object.size = function (obj) {\n  return objectKeys(obj).length;\n}; // size()\n\n// #### values\n\n// Returns all values from each key/value pair of the `obj` in an array.\nhelpers.object.values = function (obj) {\n  var keys = helpers.object.keys(obj);\n  var length = keys.length;\n  var values = new Array(length);\n  for (var i = 0; i < length; i += 1) {\n    values[i] = obj[keys[i]];\n  }\n  return values;\n}; // values()\n\n// #### value Freq\n\n// Returns the frequency of each unique value present in the `obj`, where the\n// **key** is the *value* and **value** is the *frequency*.\nhelpers.object.valueFreq = function (obj) {\n  var keys = helpers.object.keys(obj);\n  var length = keys.length;\n  var val;\n  var vf = objectCreate(null);\n  for (var i = 0; i < length; i += 1) {\n    val = obj[keys[i]];\n    vf[val] = 1 + (vf[val] || 0);\n  }\n  return vf;\n}; // valueFreq()\n\n// #### table\n\n// Converts the `obj` in to an array of `[ key, value ]` pairs in form of a table.\n// Second argument - `f` is optional and it is a function, which is called with\n// each `value`.\nhelpers.object.table = function (obj, f) {\n  var keys = helpers.object.keys(obj);\n  var length = keys.length;\n  var pairs = new Array(length);\n  var ak, av;\n  for (var i = 0; i < length; i += 1) {\n    ak = keys[i];\n    av = obj[ak];\n    if (typeof f === 'function') f(av);\n    pairs[i] = [ak, av];\n  }\n  return pairs;\n}; // table()\n\n// ### Validation Helpers\n\nhelpers.validate = Object.create(null);\n\n// Create aliases for isObject and isArray.\nhelpers.validate.isObject = helpers.object.isObject;\nhelpers.validate.isArray = helpers.array.isArray;\n\n// #### isFiniteInteger\n\n// Validates if `n` is a finite integer.\nhelpers.validate.isFiniteInteger = function (n) {\n  return typeof n === 'number' && !isNaN(n) && isFinite(n) && n === Math.round(n);\n}; // isFiniteInteger()\n\n// #### isFiniteNumber\n\n// Validates if `n` is a valid number.\nhelpers.validate.isFiniteNumber = function (n) {\n  return typeof n === 'number' && !isNaN(n) && isFinite(n);\n}; // isFiniteNumber()\n\n// ### cross validation\n/**\n *\n * Creates an instance of cross validator useful for machine learning tasks.\n *\n * @param {string[]} classLabels - array containing all the class labels.\n * @return {methods} object conatining set of API methods for tasks like evalutaion,\n * reset and metrics generation.\n*/\nhelpers.validate.cross = function (classLabels) {\n  // wink's const for unknown predictions!\n  const unknown = 'unknown';\n  // To ensure that metrics is not computed prior to evaluation.\n  var evaluated = false;\n  // The confusion matrix.\n  var cm;\n  var precision;\n  var recall;\n  var fmeasure;\n\n  // The class labels is assigned to this variable.\n  var labels;\n  // The length of `labels` array.\n  var labelCount;\n  var labelsObj = Object.create(null);\n\n  // Returned!\n  var methods = Object.create(null);\n\n  /**\n   *\n   * Resets the current instance for another round of evaluation; the class\n   * labels defined at instance creation time are not touched.\n   *\n   * @return {undefined} nothing!\n  */\n  var reset = function () {\n    evaluated = false;\n    cm = Object.create(null);\n    precision = Object.create(null);\n    recall = Object.create(null);\n    fmeasure = Object.create(null);\n\n    // Initialize confusion matrix and metrics.\n    for (let i = 0; i < labelCount; i += 1) {\n      const row = labels[i];\n      labelsObj[row] = true;\n      cm[row] = Object.create(null);\n      precision[row] = 0;\n      recall[row] = 0;\n      fmeasure[row] = 0;\n      for (let j = 0; j < labelCount; j += 1) {\n        const col = labels[j];\n        cm[row][col] = 0;\n      }\n    }\n  }; // reset()\n\n  /**\n   *\n   * Creates an instance of cross validator useful for machine learning tasks.\n   *\n   * @param {string} truth - the actual class label.\n   * @param {string} guess - the predicted class label.\n   * @return {boolean} returns true if the evaluation is successful. The evaluation\n   * may fail if `truth` or `guess` is not in the array `classLabels` provided at\n   * instance creation time; or if guess is equal to `unknown`.\n  */\n  var evaluate = function (truth, guess) {\n    // If prediction failed then return false!\n    if (guess === unknown || !labelsObj[truth] || !labelsObj[guess]) return false;\n    // Update confusion matrix.\n    if (guess === truth) {\n      cm[truth][guess] += 1;\n    } else {\n      cm[guess][truth] += 1;\n    }\n    evaluated = true;\n    return true;\n  }; // evaluate()\n\n  /**\n   *\n   * It computes a detailed metrics consisting of macro-averaged precision,\n   * recall and f-measure along with their label-wise values and the confusion\n   * matrix.\n   *\n   * @return {object} object containing macro-averaged `avgPrecision`, `avgRecall`,\n   * `avgFMeasure` values along with other details such as label-wise values\n   * and the confusion matrix. A value of `null` is returned if no evaluate()\n   * has been called before.\n  */\n  var metrics = function () {\n    if (!evaluated) return null;\n    // Numerators for every label; they are same for precision & recall both.\n    var n = Object.create(null);\n    // Only denominators differs for precision & recall\n    var pd = Object.create(null);\n    var rd = Object.create(null);\n    // `row` and `col` of confusion matrix.\n    var col, row;\n    var i, j;\n    // Macro average values for metrics.\n    var avgPrecision = 0;\n    var avgRecall = 0;\n    var avgFMeasure = 0;\n\n    // Compute label-wise numerators & denominators!\n    for (i = 0; i < labelCount; i += 1) {\n      row = labels[i];\n      for (j = 0; j < labelCount; j += 1) {\n        col = labels[j];\n        if (row === col) {\n          n[row] = cm[row][col];\n        }\n        pd[row] = cm[row][col] + (pd[row] || 0);\n        rd[row] = cm[col][row] + (rd[row] || 0);\n      }\n    }\n    // Ready to compute metrics.\n    for (i = 0; i < labelCount; i += 1) {\n      row = labels[i];\n      precision[row] = +(n[row] / pd[row]).toFixed(4);\n      // NaN can occur if a label has not been encountered.\n      if (isNaN(precision[row])) precision[row] = 0;\n      recall[row] = +(n[row] / rd[row]).toFixed(4);\n      if (isNaN(recall[row])) recall[row] = 0;\n      fmeasure[row] = +(2 * precision[row] * recall[row] / (precision[row] + recall[row])).toFixed(4);\n      if (isNaN(fmeasure[row])) fmeasure[row] = 0;\n    }\n    // Compute thier averages, note they will be macro avegages.\n    for (i = 0; i < labelCount; i += 1) {\n      avgPrecision += precision[labels[i]] / labelCount;\n      avgRecall += recall[labels[i]] / labelCount;\n      avgFMeasure += fmeasure[labels[i]] / labelCount;\n    }\n    // Return metrics.\n    return {\n      // Macro-averaged metrics.\n      avgPrecision: +avgPrecision.toFixed(4),\n      avgRecall: +avgRecall.toFixed(4),\n      avgFMeasure: +avgFMeasure.toFixed(4),\n      details: {\n        // Confusion Matrix.\n        confusionMatrix: cm,\n        // Label wise metrics details, from those averages were computed.\n        precision: precision,\n        recall: recall,\n        fmeasure: fmeasure\n      }\n    };\n  }; // metrics()\n\n  if (!helpers.validate.isArray(classLabels)) {\n    throw Error('cross validate: class labels must be an array.');\n  }\n  if (classLabels.length < 2) {\n    throw Error('cross validate: at least 2 class labels are required.');\n  }\n  labels = classLabels;\n  labelCount = labels.length;\n  reset();\n  methods.reset = reset;\n  methods.evaluate = evaluate;\n  methods.metrics = metrics;\n  return methods;\n}; // cross()\n\n// ### Object Helpers\n\nhelpers.string = Object.create(null);\n\n// Regex for [diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) removal.\nvar rgxDiacritical = /[\\u0300-\\u036f]/g;\n\n/**\n *\n * Normalizes the token's value by converting it to lower case and stripping\n * the diacritical marks (if any).\n *\n * @param {string} str — that needs to be normalized.\n * @return {string} the normalized value.\n * @example\n * normalize( 'Nestlé' );\n * // -> nestle\n*/\nhelpers.string.normalize = function (str) {\n  return str.toLowerCase().normalize('NFD').replace(rgxDiacritical, '');\n}; // normalize()\n\nmodule.exports = helpers;","map":{"version":3,"names":["helpers","Object","create","productReducer","prev","curr","c","cmax","length","p","pmax","result","push","concat","array","isArray","v","undefined","prototype","toString","call","ascending","a","b","descending","ascendingOnKey","descendingOnKey","ascendingOnValue","descendingOnValue","ascendingOn","accessor1","accessor2","descendingOn","pluck","key","limit","k","plucked","i","lim","Array","product","reduce","shuffle","balance","candidate","temp","Math","floor","random","objectKeys","keys","objectCreate","object","isObject","obj","size","values","valueFreq","val","vf","table","f","pairs","ak","av","validate","isFiniteInteger","n","isNaN","isFinite","round","isFiniteNumber","cross","classLabels","unknown","evaluated","cm","precision","recall","fmeasure","labels","labelCount","labelsObj","methods","reset","row","j","col","evaluate","truth","guess","metrics","pd","rd","avgPrecision","avgRecall","avgFMeasure","toFixed","details","confusionMatrix","Error","string","rgxDiacritical","normalize","str","toLowerCase","replace","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-helpers/src/wink-helpers.js"],"sourcesContent":["//     wink-helpers\n//     Functions for cross validation, shuffle, cartesian product and more\n//\n//     Copyright (C) 2017-18  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-helpers”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar helpers = Object.create( null );\n\n// ### Private Functions\n\n// #### Product Reducer (Callback)\n\n// Callback function used by `reduce` inside the `product()` function.\n// Follows the standard guidelines of `reduce()` callback function.\nvar productReducer = function ( prev, curr ) {\n  var c,\n      cmax = curr.length;\n  var p,\n      pmax = prev.length;\n  var result = [];\n\n  for ( p = 0; p < pmax; p += 1 ) {\n    for ( c = 0; c < cmax; c += 1 ) {\n      result.push( prev[ p ].concat( curr[ c ] ) );\n    }\n  }\n  return ( result );\n}; // productReducer()\n\n// ### Public Function\n\n// ### Array Helpers\n\nhelpers.array = Object.create( null);\n\n// #### is Array\n\n// Tests if argument `v` is a JS array; returns `true` if it is, otherwise returns `false`.\nhelpers.array.isArray = function ( v ) {\n  return ( ( v !== undefined ) && ( v !== null ) && ( Object.prototype.toString.call( v ) === '[object Array]' ) );\n}; // isArray()\n\n\n// #### sorting helpers\n\n// Set of helpers to sort either numbers or strings. For key/value pairs,\n// the format for each element must be `[ key, value ]`.\n// Sort helper to sort an array in ascending order.\nhelpers.array.ascending = function ( a, b ) {\n  return ( a > b ) ? 1 :\n            ( a === b ) ? 0 : -1;\n}; // ascending()\n\n// Sort helper to sort an array in descending order.\nhelpers.array.descending = function ( a, b ) {\n  return ( b > a ) ? 1 :\n            ( b === a ) ? 0 : -1;\n}; // descending()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **key**.\nhelpers.array.ascendingOnKey = function ( a, b ) {\n  return ( a[ 0 ] > b[ 0 ] ) ? 1 :\n            ( a[ 0 ] === b[ 0 ] ) ? 0 : -1;\n}; // ascendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **key**.\nhelpers.array.descendingOnKey = function ( a, b ) {\n  return ( b[ 0 ] > a[ 0 ] ) ? 1 :\n            ( b[ 0 ] === a[ 0 ] ) ? 0 : -1;\n}; // descendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **value**.\nhelpers.array.ascendingOnValue = function ( a, b ) {\n  return ( a[ 1 ] > b[ 1 ] ) ? 1 :\n            ( a[ 1 ] === b[ 1 ] ) ? 0 : -1;\n}; // ascendingOnValue()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **value**.\nhelpers.array.descendingOnValue = function ( a, b ) {\n  return ( b[ 1 ] > a[ 1 ] ) ? 1 :\n            ( b[ 1 ] === a[ 1 ] ) ? 0 : -1;\n}; // descendingOnValue()\n\n// The following two functions generate a suitable function for sorting on a single\n// key or on a composite keys (max 2 only). Just a remider, the generated function\n// does not sort on two keys; instead it will sort on a key composed of the two\n// accessors.\n// Sorts in ascending order on `accessor1` & `accessor2` (optional).\nhelpers.array.ascendingOn = function ( accessor1, accessor2 ) {\n  if ( accessor2 ) {\n    return ( function ( a, b ) {\n      return ( a[ accessor1 ][ accessor2 ] > b[ accessor1 ][ accessor2 ] ) ? 1 :\n              ( a[ accessor1 ][ accessor2 ] === b[ accessor1 ][ accessor2 ] ) ? 0 : -1;\n    } );\n  }\n  return ( function ( a, b ) {\n    return ( a[ accessor1 ] > b[ accessor1 ] ) ? 1 :\n            ( a[ accessor1 ] === b[ accessor1 ] ) ? 0 : -1;\n  } );\n}; // ascendingOn()\n\n// Sorts in descending order on `accessor1` & `accessor2` (optional).\nhelpers.array.descendingOn = function ( accessor1, accessor2 ) {\n  if ( accessor2 ) {\n    return ( function ( a, b ) {\n      return ( b[ accessor1 ][ accessor2 ] > a[ accessor1 ][ accessor2 ] ) ? 1 :\n              ( b[ accessor1 ][ accessor2 ] === a[ accessor1 ][ accessor2 ] ) ? 0 : -1;\n    } );\n  }\n  return ( function ( a, b ) {\n    return ( b[ accessor1 ] > a[ accessor1 ] ) ? 1 :\n            ( b[ accessor1 ] === a[ accessor1 ] ) ? 0 : -1;\n  } );\n}; // descendingOn()\n\n// #### pluck\n\n// Plucks specified element from each element of an **array of array**, and\n// returns the resultant array. The element is specified by `i` (default `0`) and\n// number of elements to pluck are defined by `limit` (default `a.length`).\nhelpers.array.pluck = function ( a, key, limit ) {\n  var k, plucked;\n  k = a.length;\n  var i = key || 0;\n  var lim = limit || k;\n  if ( lim > k ) lim = k;\n  plucked = new Array( lim );\n  for ( k = 0; k < lim; k += 1 ) plucked[ k ] = a[ k ][ i ];\n  return plucked;\n}; // pluck()\n\n// #### product\n\n// Finds the Cartesian Product of arrays present inside the array `a`. Therefore\n// the array `a` must be an array of 1-dimensional arrays. For example,\n// `product( [ [ 9, 8 ], [ 1, 2 ] ] )`\n// will produce `[ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]`.\nhelpers.array.product = function ( a ) {\n  return (\n    a.reduce( productReducer, [ [] ] )\n  );\n};\n\n// #### shuffle\n\n// Randomly shuffles the elements of an array and returns the same.\n// Reference: Chapter on Random Numbers/Shuffling in Seminumerical algorithms.\n// The Art of Computer Programming Volume II by Donald E Kunth\nhelpers.array.shuffle = function ( array ) {\n  var a = array;\n  var balance = a.length;\n  var candidate;\n  var temp;\n\n  while ( balance ) {\n    candidate = Math.floor( Math.random() * balance );\n    balance -= 1;\n\n    temp = a[ balance ];\n    a[ balance ] = a[ candidate ];\n    a[ candidate ] = temp;\n  }\n\n  return ( a );\n};\n\n\n// ### Object Helpers\n\nvar objectKeys = Object.keys;\nvar objectCreate = Object.create;\n\nhelpers.object = Object.create( null );\n\n// #### is Object\n\n// Tests if argument `v` is a JS object; returns `true` if it is, otherwise returns `false`.\nhelpers.object.isObject = function ( v ) {\n  return ( v && ( Object.prototype.toString.call( v ) === '[object Object]' ) ) ? true : false; // eslint-disable-line no-unneeded-ternary\n\n}; // isObject()\n\n// #### keys\n\n// Returns keys of the `obj` in an array.\nhelpers.object.keys = function ( obj ) {\n  return ( objectKeys( obj ) );\n}; // keys()\n\n// #### size\n\n// Returns the number of keys of the `obj`.\nhelpers.object.size = function ( obj ) {\n  return ( ( objectKeys( obj ) ).length );\n}; // size()\n\n// #### values\n\n// Returns all values from each key/value pair of the `obj` in an array.\nhelpers.object.values = function ( obj ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var values = new Array( length );\n  for ( var i = 0; i < length; i += 1 ) {\n    values[ i ] = obj[ keys[ i ] ];\n  }\n  return values;\n}; // values()\n\n// #### value Freq\n\n// Returns the frequency of each unique value present in the `obj`, where the\n// **key** is the *value* and **value** is the *frequency*.\nhelpers.object.valueFreq = function ( obj ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var val;\n  var vf = objectCreate( null );\n  for ( var i = 0; i < length; i += 1 ) {\n    val = obj[ keys[ i ] ];\n    vf[ val ] = 1 + ( vf[ val ] || 0 );\n  }\n  return vf;\n}; // valueFreq()\n\n// #### table\n\n// Converts the `obj` in to an array of `[ key, value ]` pairs in form of a table.\n// Second argument - `f` is optional and it is a function, which is called with\n// each `value`.\nhelpers.object.table = function ( obj, f ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var pairs = new Array( length );\n  var ak, av;\n  for ( var i = 0; i < length; i += 1 ) {\n    ak = keys[ i ];\n    av = obj[ ak ];\n    if ( typeof f === 'function' ) f( av );\n    pairs[ i ] = [ ak, av ];\n  }\n  return pairs;\n}; // table()\n\n// ### Validation Helpers\n\nhelpers.validate = Object.create( null );\n\n// Create aliases for isObject and isArray.\nhelpers.validate.isObject = helpers.object.isObject;\nhelpers.validate.isArray = helpers.array.isArray;\n\n// #### isFiniteInteger\n\n// Validates if `n` is a finite integer.\nhelpers.validate.isFiniteInteger = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n ) &&\n    ( n === Math.round( n ) )\n  );\n}; // isFiniteInteger()\n\n// #### isFiniteNumber\n\n// Validates if `n` is a valid number.\nhelpers.validate.isFiniteNumber = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n )\n  );\n}; // isFiniteNumber()\n\n// ### cross validation\n/**\n *\n * Creates an instance of cross validator useful for machine learning tasks.\n *\n * @param {string[]} classLabels - array containing all the class labels.\n * @return {methods} object conatining set of API methods for tasks like evalutaion,\n * reset and metrics generation.\n*/\nhelpers.validate.cross = function ( classLabels ) {\n  // wink's const for unknown predictions!\n  const unknown = 'unknown';\n  // To ensure that metrics is not computed prior to evaluation.\n  var evaluated = false;\n  // The confusion matrix.\n  var cm;\n  var precision;\n  var recall;\n  var fmeasure;\n\n  // The class labels is assigned to this variable.\n  var labels;\n  // The length of `labels` array.\n  var labelCount;\n  var labelsObj = Object.create( null );\n\n  // Returned!\n  var methods = Object.create( null );\n\n\n  /**\n   *\n   * Resets the current instance for another round of evaluation; the class\n   * labels defined at instance creation time are not touched.\n   *\n   * @return {undefined} nothing!\n  */\n  var reset = function ( ) {\n    evaluated = false;\n    cm = Object.create( null );\n    precision = Object.create( null );\n    recall = Object.create( null );\n    fmeasure = Object.create( null );\n\n    // Initialize confusion matrix and metrics.\n    for ( let i = 0; i < labelCount; i += 1 ) {\n      const row = labels[ i ];\n      labelsObj[ row ] = true;\n      cm[ row ] = Object.create( null );\n      precision[ row ] = 0;\n      recall[ row ] = 0;\n      fmeasure[ row ] = 0;\n      for ( let j = 0; j < labelCount; j += 1 ) {\n        const col = labels[ j ];\n        cm[ row ][ col ] = 0;\n      }\n    }\n  }; // reset()\n\n  /**\n   *\n   * Creates an instance of cross validator useful for machine learning tasks.\n   *\n   * @param {string} truth - the actual class label.\n   * @param {string} guess - the predicted class label.\n   * @return {boolean} returns true if the evaluation is successful. The evaluation\n   * may fail if `truth` or `guess` is not in the array `classLabels` provided at\n   * instance creation time; or if guess is equal to `unknown`.\n  */\n  var evaluate = function ( truth, guess ) {\n    // If prediction failed then return false!\n    if ( guess === unknown || !labelsObj[ truth ] || !labelsObj[ guess ] ) return false;\n    // Update confusion matrix.\n    if ( guess === truth ) {\n      cm[ truth ][ guess ] += 1;\n    } else {\n      cm[ guess ][ truth ] += 1;\n    }\n    evaluated = true;\n    return true;\n  }; // evaluate()\n\n  /**\n   *\n   * It computes a detailed metrics consisting of macro-averaged precision,\n   * recall and f-measure along with their label-wise values and the confusion\n   * matrix.\n   *\n   * @return {object} object containing macro-averaged `avgPrecision`, `avgRecall`,\n   * `avgFMeasure` values along with other details such as label-wise values\n   * and the confusion matrix. A value of `null` is returned if no evaluate()\n   * has been called before.\n  */\n  var metrics = function ( ) {\n    if ( !evaluated ) return null;\n    // Numerators for every label; they are same for precision & recall both.\n    var n = Object.create( null );\n    // Only denominators differs for precision & recall\n    var pd = Object.create( null );\n    var rd = Object.create( null );\n    // `row` and `col` of confusion matrix.\n    var col, row;\n    var i, j;\n    // Macro average values for metrics.\n    var avgPrecision = 0;\n    var avgRecall = 0;\n    var avgFMeasure = 0;\n\n    // Compute label-wise numerators & denominators!\n    for ( i = 0; i < labelCount; i += 1 ) {\n      row = labels[ i ];\n      for ( j = 0; j < labelCount; j += 1 ) {\n        col = labels[ j ];\n        if ( row === col ) {\n          n[ row ] = cm[ row ][ col ];\n        }\n        pd[ row ] = cm[ row ][ col ] + ( pd[ row ] || 0 );\n        rd[ row ] = cm[ col ][ row ] + ( rd[ row ] || 0 );\n      }\n    }\n    // Ready to compute metrics.\n    for ( i = 0; i < labelCount; i += 1 ) {\n      row = labels[ i ];\n      precision[ row ] = +( n[ row ] / pd[ row ] ).toFixed( 4 );\n      // NaN can occur if a label has not been encountered.\n      if ( isNaN( precision[ row ] ) ) precision[ row ] = 0;\n\n      recall[ row ] = +( n[ row ] / rd[ row ] ).toFixed( 4 );\n      if ( isNaN( recall[ row ] ) ) recall[ row ] = 0;\n\n      fmeasure[ row ] = +( 2 * precision[ row ] * recall[ row ] / ( precision[ row ] + recall[ row ] ) ).toFixed( 4 );\n      if ( isNaN( fmeasure[ row ] ) ) fmeasure[ row ] = 0;\n    }\n    // Compute thier averages, note they will be macro avegages.\n    for ( i = 0; i < labelCount; i += 1 ) {\n      avgPrecision += ( precision[ labels[ i ] ] / labelCount );\n      avgRecall += ( recall[ labels[ i ] ] / labelCount );\n      avgFMeasure += ( fmeasure[ labels[ i ] ] / labelCount );\n    }\n    // Return metrics.\n    return (\n      {\n        // Macro-averaged metrics.\n        avgPrecision: +avgPrecision.toFixed( 4 ),\n        avgRecall: +avgRecall.toFixed( 4 ),\n        avgFMeasure: +avgFMeasure.toFixed( 4 ),\n        details: {\n          // Confusion Matrix.\n          confusionMatrix: cm,\n          // Label wise metrics details, from those averages were computed.\n          precision: precision,\n          recall: recall,\n          fmeasure: fmeasure\n        }\n      }\n    );\n  }; // metrics()\n\n  if ( !helpers.validate.isArray( classLabels ) ) {\n    throw Error( 'cross validate: class labels must be an array.' );\n  }\n  if ( classLabels.length < 2 ) {\n    throw Error( 'cross validate: at least 2 class labels are required.' );\n  }\n  labels = classLabels;\n  labelCount = labels.length;\n\n  reset();\n\n  methods.reset = reset;\n  methods.evaluate = evaluate;\n  methods.metrics = metrics;\n\n  return methods;\n}; // cross()\n\n// ### Object Helpers\n\nhelpers.string = Object.create( null );\n\n// Regex for [diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) removal.\nvar rgxDiacritical = /[\\u0300-\\u036f]/g;\n\n/**\n *\n * Normalizes the token's value by converting it to lower case and stripping\n * the diacritical marks (if any).\n *\n * @param {string} str — that needs to be normalized.\n * @return {string} the normalized value.\n * @example\n * normalize( 'Nestlé' );\n * // -> nestle\n*/\nhelpers.string.normalize = function ( str ) {\n  return (\n    str.toLowerCase().normalize( 'NFD' ).replace( rgxDiacritical, '' )\n  );\n}; // normalize()\n\nmodule.exports = helpers;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAIA,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;AAEnC;;AAEA;;AAEA;AACA;AACA,IAAIC,cAAc,GAAG,SAAAA,CAAWC,IAAI,EAAEC,IAAI,EAAG;EAC3C,IAAIC,CAAC;IACDC,IAAI,GAAGF,IAAI,CAACG,MAAM;EACtB,IAAIC,CAAC;IACDC,IAAI,GAAGN,IAAI,CAACI,MAAM;EACtB,IAAIG,MAAM,GAAG,EAAE;EAEf,KAAMF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,EAAED,CAAC,IAAI,CAAC,EAAG;IAC9B,KAAMH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,EAAED,CAAC,IAAI,CAAC,EAAG;MAC9BK,MAAM,CAACC,IAAI,CAAER,IAAI,CAAEK,CAAC,CAAE,CAACI,MAAM,CAAER,IAAI,CAAEC,CAAC,CAAG,CAAE,CAAC;IAC9C;EACF;EACA,OAASK,MAAM;AACjB,CAAC,CAAC,CAAC;;AAEH;;AAEA;;AAEAX,OAAO,CAACc,KAAK,GAAGb,MAAM,CAACC,MAAM,CAAE,IAAI,CAAC;;AAEpC;;AAEA;AACAF,OAAO,CAACc,KAAK,CAACC,OAAO,GAAG,UAAWC,CAAC,EAAG;EACrC,OAAWA,CAAC,KAAKC,SAAS,IAAQD,CAAC,KAAK,IAAM,IAAMf,MAAM,CAACiB,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAEJ,CAAE,CAAC,KAAK,gBAAkB;AAChH,CAAC,CAAC,CAAC;;AAGH;;AAEA;AACA;AACA;AACAhB,OAAO,CAACc,KAAK,CAACO,SAAS,GAAG,UAAWC,CAAC,EAAEC,CAAC,EAAG;EAC1C,OAASD,CAAC,GAAGC,CAAC,GAAK,CAAC,GACRD,CAAC,KAAKC,CAAC,GAAK,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;;AAEH;AACAvB,OAAO,CAACc,KAAK,CAACU,UAAU,GAAG,UAAWF,CAAC,EAAEC,CAAC,EAAG;EAC3C,OAASA,CAAC,GAAGD,CAAC,GAAK,CAAC,GACRC,CAAC,KAAKD,CAAC,GAAK,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;;AAEH;AACAtB,OAAO,CAACc,KAAK,CAACW,cAAc,GAAG,UAAWH,CAAC,EAAEC,CAAC,EAAG;EAC/C,OAASD,CAAC,CAAE,CAAC,CAAE,GAAGC,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAClBD,CAAC,CAAE,CAAC,CAAE,KAAKC,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;;AAEH;AACAvB,OAAO,CAACc,KAAK,CAACY,eAAe,GAAG,UAAWJ,CAAC,EAAEC,CAAC,EAAG;EAChD,OAASA,CAAC,CAAE,CAAC,CAAE,GAAGD,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAClBC,CAAC,CAAE,CAAC,CAAE,KAAKD,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;;AAEH;AACAtB,OAAO,CAACc,KAAK,CAACa,gBAAgB,GAAG,UAAWL,CAAC,EAAEC,CAAC,EAAG;EACjD,OAASD,CAAC,CAAE,CAAC,CAAE,GAAGC,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAClBD,CAAC,CAAE,CAAC,CAAE,KAAKC,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;;AAEH;AACAvB,OAAO,CAACc,KAAK,CAACc,iBAAiB,GAAG,UAAWN,CAAC,EAAEC,CAAC,EAAG;EAClD,OAASA,CAAC,CAAE,CAAC,CAAE,GAAGD,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAClBC,CAAC,CAAE,CAAC,CAAE,KAAKD,CAAC,CAAE,CAAC,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACAtB,OAAO,CAACc,KAAK,CAACe,WAAW,GAAG,UAAWC,SAAS,EAAEC,SAAS,EAAG;EAC5D,IAAKA,SAAS,EAAG;IACf,OAAS,UAAWT,CAAC,EAAEC,CAAC,EAAG;MACzB,OAASD,CAAC,CAAEQ,SAAS,CAAE,CAAEC,SAAS,CAAE,GAAGR,CAAC,CAAEO,SAAS,CAAE,CAAEC,SAAS,CAAE,GAAK,CAAC,GAC9DT,CAAC,CAAEQ,SAAS,CAAE,CAAEC,SAAS,CAAE,KAAKR,CAAC,CAAEO,SAAS,CAAE,CAAEC,SAAS,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;IAClF,CAAC;EACH;EACA,OAAS,UAAWT,CAAC,EAAEC,CAAC,EAAG;IACzB,OAASD,CAAC,CAAEQ,SAAS,CAAE,GAAGP,CAAC,CAAEO,SAAS,CAAE,GAAK,CAAC,GACpCR,CAAC,CAAEQ,SAAS,CAAE,KAAKP,CAAC,CAAEO,SAAS,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;EACxD,CAAC;AACH,CAAC,CAAC,CAAC;;AAEH;AACA9B,OAAO,CAACc,KAAK,CAACkB,YAAY,GAAG,UAAWF,SAAS,EAAEC,SAAS,EAAG;EAC7D,IAAKA,SAAS,EAAG;IACf,OAAS,UAAWT,CAAC,EAAEC,CAAC,EAAG;MACzB,OAASA,CAAC,CAAEO,SAAS,CAAE,CAAEC,SAAS,CAAE,GAAGT,CAAC,CAAEQ,SAAS,CAAE,CAAEC,SAAS,CAAE,GAAK,CAAC,GAC9DR,CAAC,CAAEO,SAAS,CAAE,CAAEC,SAAS,CAAE,KAAKT,CAAC,CAAEQ,SAAS,CAAE,CAAEC,SAAS,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;IAClF,CAAC;EACH;EACA,OAAS,UAAWT,CAAC,EAAEC,CAAC,EAAG;IACzB,OAASA,CAAC,CAAEO,SAAS,CAAE,GAAGR,CAAC,CAAEQ,SAAS,CAAE,GAAK,CAAC,GACpCP,CAAC,CAAEO,SAAS,CAAE,KAAKR,CAAC,CAAEQ,SAAS,CAAE,GAAK,CAAC,GAAG,CAAC,CAAC;EACxD,CAAC;AACH,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACA;AACA;AACA9B,OAAO,CAACc,KAAK,CAACmB,KAAK,GAAG,UAAWX,CAAC,EAAEY,GAAG,EAAEC,KAAK,EAAG;EAC/C,IAAIC,CAAC,EAAEC,OAAO;EACdD,CAAC,GAAGd,CAAC,CAACd,MAAM;EACZ,IAAI8B,CAAC,GAAGJ,GAAG,IAAI,CAAC;EAChB,IAAIK,GAAG,GAAGJ,KAAK,IAAIC,CAAC;EACpB,IAAKG,GAAG,GAAGH,CAAC,EAAGG,GAAG,GAAGH,CAAC;EACtBC,OAAO,GAAG,IAAIG,KAAK,CAAED,GAAI,CAAC;EAC1B,KAAMH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,GAAG,EAAEH,CAAC,IAAI,CAAC,EAAGC,OAAO,CAAED,CAAC,CAAE,GAAGd,CAAC,CAAEc,CAAC,CAAE,CAAEE,CAAC,CAAE;EACzD,OAAOD,OAAO;AAChB,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACA;AACA;AACA;AACArC,OAAO,CAACc,KAAK,CAAC2B,OAAO,GAAG,UAAWnB,CAAC,EAAG;EACrC,OACEA,CAAC,CAACoB,MAAM,CAAEvC,cAAc,EAAE,CAAE,EAAE,CAAG,CAAC;AAEtC,CAAC;;AAED;;AAEA;AACA;AACA;AACAH,OAAO,CAACc,KAAK,CAAC6B,OAAO,GAAG,UAAW7B,KAAK,EAAG;EACzC,IAAIQ,CAAC,GAAGR,KAAK;EACb,IAAI8B,OAAO,GAAGtB,CAAC,CAACd,MAAM;EACtB,IAAIqC,SAAS;EACb,IAAIC,IAAI;EAER,OAAQF,OAAO,EAAG;IAChBC,SAAS,GAAGE,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,OAAQ,CAAC;IACjDA,OAAO,IAAI,CAAC;IAEZE,IAAI,GAAGxB,CAAC,CAAEsB,OAAO,CAAE;IACnBtB,CAAC,CAAEsB,OAAO,CAAE,GAAGtB,CAAC,CAAEuB,SAAS,CAAE;IAC7BvB,CAAC,CAAEuB,SAAS,CAAE,GAAGC,IAAI;EACvB;EAEA,OAASxB,CAAC;AACZ,CAAC;;AAGD;;AAEA,IAAI4B,UAAU,GAAGjD,MAAM,CAACkD,IAAI;AAC5B,IAAIC,YAAY,GAAGnD,MAAM,CAACC,MAAM;AAEhCF,OAAO,CAACqD,MAAM,GAAGpD,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;AAEtC;;AAEA;AACAF,OAAO,CAACqD,MAAM,CAACC,QAAQ,GAAG,UAAWtC,CAAC,EAAG;EACvC,OAASA,CAAC,IAAMf,MAAM,CAACiB,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAEJ,CAAE,CAAC,KAAK,iBAAmB,GAAK,IAAI,GAAG,KAAK,CAAC,CAAC;AAEhG,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACAhB,OAAO,CAACqD,MAAM,CAACF,IAAI,GAAG,UAAWI,GAAG,EAAG;EACrC,OAASL,UAAU,CAAEK,GAAI,CAAC;AAC5B,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACAvD,OAAO,CAACqD,MAAM,CAACG,IAAI,GAAG,UAAWD,GAAG,EAAG;EACrC,OAAWL,UAAU,CAAEK,GAAI,CAAC,CAAG/C,MAAM;AACvC,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACAR,OAAO,CAACqD,MAAM,CAACI,MAAM,GAAG,UAAWF,GAAG,EAAG;EACvC,IAAIJ,IAAI,GAAGnD,OAAO,CAACqD,MAAM,CAACF,IAAI,CAAEI,GAAI,CAAC;EACrC,IAAI/C,MAAM,GAAG2C,IAAI,CAAC3C,MAAM;EACxB,IAAIiD,MAAM,GAAG,IAAIjB,KAAK,CAAEhC,MAAO,CAAC;EAChC,KAAM,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9B,MAAM,EAAE8B,CAAC,IAAI,CAAC,EAAG;IACpCmB,MAAM,CAAEnB,CAAC,CAAE,GAAGiB,GAAG,CAAEJ,IAAI,CAAEb,CAAC,CAAE,CAAE;EAChC;EACA,OAAOmB,MAAM;AACf,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACA;AACAzD,OAAO,CAACqD,MAAM,CAACK,SAAS,GAAG,UAAWH,GAAG,EAAG;EAC1C,IAAIJ,IAAI,GAAGnD,OAAO,CAACqD,MAAM,CAACF,IAAI,CAAEI,GAAI,CAAC;EACrC,IAAI/C,MAAM,GAAG2C,IAAI,CAAC3C,MAAM;EACxB,IAAImD,GAAG;EACP,IAAIC,EAAE,GAAGR,YAAY,CAAE,IAAK,CAAC;EAC7B,KAAM,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9B,MAAM,EAAE8B,CAAC,IAAI,CAAC,EAAG;IACpCqB,GAAG,GAAGJ,GAAG,CAAEJ,IAAI,CAAEb,CAAC,CAAE,CAAE;IACtBsB,EAAE,CAAED,GAAG,CAAE,GAAG,CAAC,IAAKC,EAAE,CAAED,GAAG,CAAE,IAAI,CAAC,CAAE;EACpC;EACA,OAAOC,EAAE;AACX,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACA;AACA;AACA5D,OAAO,CAACqD,MAAM,CAACQ,KAAK,GAAG,UAAWN,GAAG,EAAEO,CAAC,EAAG;EACzC,IAAIX,IAAI,GAAGnD,OAAO,CAACqD,MAAM,CAACF,IAAI,CAAEI,GAAI,CAAC;EACrC,IAAI/C,MAAM,GAAG2C,IAAI,CAAC3C,MAAM;EACxB,IAAIuD,KAAK,GAAG,IAAIvB,KAAK,CAAEhC,MAAO,CAAC;EAC/B,IAAIwD,EAAE,EAAEC,EAAE;EACV,KAAM,IAAI3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9B,MAAM,EAAE8B,CAAC,IAAI,CAAC,EAAG;IACpC0B,EAAE,GAAGb,IAAI,CAAEb,CAAC,CAAE;IACd2B,EAAE,GAAGV,GAAG,CAAES,EAAE,CAAE;IACd,IAAK,OAAOF,CAAC,KAAK,UAAU,EAAGA,CAAC,CAAEG,EAAG,CAAC;IACtCF,KAAK,CAAEzB,CAAC,CAAE,GAAG,CAAE0B,EAAE,EAAEC,EAAE,CAAE;EACzB;EACA,OAAOF,KAAK;AACd,CAAC,CAAC,CAAC;;AAEH;;AAEA/D,OAAO,CAACkE,QAAQ,GAAGjE,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;AAExC;AACAF,OAAO,CAACkE,QAAQ,CAACZ,QAAQ,GAAGtD,OAAO,CAACqD,MAAM,CAACC,QAAQ;AACnDtD,OAAO,CAACkE,QAAQ,CAACnD,OAAO,GAAGf,OAAO,CAACc,KAAK,CAACC,OAAO;;AAEhD;;AAEA;AACAf,OAAO,CAACkE,QAAQ,CAACC,eAAe,GAAG,UAAWC,CAAC,EAAG;EAChD,OACI,OAAOA,CAAC,KAAK,QAAQ,IACvB,CAACC,KAAK,CAAED,CAAE,CAAC,IACXE,QAAQ,CAAEF,CAAE,CAAC,IACXA,CAAC,KAAKrB,IAAI,CAACwB,KAAK,CAAEH,CAAE,CAAG;AAE7B,CAAC,CAAC,CAAC;;AAEH;;AAEA;AACApE,OAAO,CAACkE,QAAQ,CAACM,cAAc,GAAG,UAAWJ,CAAC,EAAG;EAC/C,OACI,OAAOA,CAAC,KAAK,QAAQ,IACvB,CAACC,KAAK,CAAED,CAAE,CAAC,IACXE,QAAQ,CAAEF,CAAE,CAAC;AAEjB,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApE,OAAO,CAACkE,QAAQ,CAACO,KAAK,GAAG,UAAWC,WAAW,EAAG;EAChD;EACA,MAAMC,OAAO,GAAG,SAAS;EACzB;EACA,IAAIC,SAAS,GAAG,KAAK;EACrB;EACA,IAAIC,EAAE;EACN,IAAIC,SAAS;EACb,IAAIC,MAAM;EACV,IAAIC,QAAQ;;EAEZ;EACA,IAAIC,MAAM;EACV;EACA,IAAIC,UAAU;EACd,IAAIC,SAAS,GAAGlF,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;EAErC;EACA,IAAIkF,OAAO,GAAGnF,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;EAGnC;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAImF,KAAK,GAAG,SAAAA,CAAA,EAAa;IACvBT,SAAS,GAAG,KAAK;IACjBC,EAAE,GAAG5E,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IAC1B4E,SAAS,GAAG7E,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IACjC6E,MAAM,GAAG9E,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IAC9B8E,QAAQ,GAAG/E,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;IAEhC;IACA,KAAM,IAAIoC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,UAAU,EAAE5C,CAAC,IAAI,CAAC,EAAG;MACxC,MAAMgD,GAAG,GAAGL,MAAM,CAAE3C,CAAC,CAAE;MACvB6C,SAAS,CAAEG,GAAG,CAAE,GAAG,IAAI;MACvBT,EAAE,CAAES,GAAG,CAAE,GAAGrF,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;MACjC4E,SAAS,CAAEQ,GAAG,CAAE,GAAG,CAAC;MACpBP,MAAM,CAAEO,GAAG,CAAE,GAAG,CAAC;MACjBN,QAAQ,CAAEM,GAAG,CAAE,GAAG,CAAC;MACnB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,IAAI,CAAC,EAAG;QACxC,MAAMC,GAAG,GAAGP,MAAM,CAAEM,CAAC,CAAE;QACvBV,EAAE,CAAES,GAAG,CAAE,CAAEE,GAAG,CAAE,GAAG,CAAC;MACtB;IACF;EACF,CAAC,CAAC,CAAC;;EAEH;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,QAAQ,GAAG,SAAAA,CAAWC,KAAK,EAAEC,KAAK,EAAG;IACvC;IACA,IAAKA,KAAK,KAAKhB,OAAO,IAAI,CAACQ,SAAS,CAAEO,KAAK,CAAE,IAAI,CAACP,SAAS,CAAEQ,KAAK,CAAE,EAAG,OAAO,KAAK;IACnF;IACA,IAAKA,KAAK,KAAKD,KAAK,EAAG;MACrBb,EAAE,CAAEa,KAAK,CAAE,CAAEC,KAAK,CAAE,IAAI,CAAC;IAC3B,CAAC,MAAM;MACLd,EAAE,CAAEc,KAAK,CAAE,CAAED,KAAK,CAAE,IAAI,CAAC;IAC3B;IACAd,SAAS,GAAG,IAAI;IAChB,OAAO,IAAI;EACb,CAAC,CAAC,CAAC;;EAEH;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIgB,OAAO,GAAG,SAAAA,CAAA,EAAa;IACzB,IAAK,CAAChB,SAAS,EAAG,OAAO,IAAI;IAC7B;IACA,IAAIR,CAAC,GAAGnE,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IAC7B;IACA,IAAI2F,EAAE,GAAG5F,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IAC9B,IAAI4F,EAAE,GAAG7F,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IAC9B;IACA,IAAIsF,GAAG,EAAEF,GAAG;IACZ,IAAIhD,CAAC,EAAEiD,CAAC;IACR;IACA,IAAIQ,YAAY,GAAG,CAAC;IACpB,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,WAAW,GAAG,CAAC;;IAEnB;IACA,KAAM3D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,UAAU,EAAE5C,CAAC,IAAI,CAAC,EAAG;MACpCgD,GAAG,GAAGL,MAAM,CAAE3C,CAAC,CAAE;MACjB,KAAMiD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,IAAI,CAAC,EAAG;QACpCC,GAAG,GAAGP,MAAM,CAAEM,CAAC,CAAE;QACjB,IAAKD,GAAG,KAAKE,GAAG,EAAG;UACjBpB,CAAC,CAAEkB,GAAG,CAAE,GAAGT,EAAE,CAAES,GAAG,CAAE,CAAEE,GAAG,CAAE;QAC7B;QACAK,EAAE,CAAEP,GAAG,CAAE,GAAGT,EAAE,CAAES,GAAG,CAAE,CAAEE,GAAG,CAAE,IAAKK,EAAE,CAAEP,GAAG,CAAE,IAAI,CAAC,CAAE;QACjDQ,EAAE,CAAER,GAAG,CAAE,GAAGT,EAAE,CAAEW,GAAG,CAAE,CAAEF,GAAG,CAAE,IAAKQ,EAAE,CAAER,GAAG,CAAE,IAAI,CAAC,CAAE;MACnD;IACF;IACA;IACA,KAAMhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,UAAU,EAAE5C,CAAC,IAAI,CAAC,EAAG;MACpCgD,GAAG,GAAGL,MAAM,CAAE3C,CAAC,CAAE;MACjBwC,SAAS,CAAEQ,GAAG,CAAE,GAAG,CAAC,CAAElB,CAAC,CAAEkB,GAAG,CAAE,GAAGO,EAAE,CAAEP,GAAG,CAAE,EAAGY,OAAO,CAAE,CAAE,CAAC;MACzD;MACA,IAAK7B,KAAK,CAAES,SAAS,CAAEQ,GAAG,CAAG,CAAC,EAAGR,SAAS,CAAEQ,GAAG,CAAE,GAAG,CAAC;MAErDP,MAAM,CAAEO,GAAG,CAAE,GAAG,CAAC,CAAElB,CAAC,CAAEkB,GAAG,CAAE,GAAGQ,EAAE,CAAER,GAAG,CAAE,EAAGY,OAAO,CAAE,CAAE,CAAC;MACtD,IAAK7B,KAAK,CAAEU,MAAM,CAAEO,GAAG,CAAG,CAAC,EAAGP,MAAM,CAAEO,GAAG,CAAE,GAAG,CAAC;MAE/CN,QAAQ,CAAEM,GAAG,CAAE,GAAG,CAAC,CAAE,CAAC,GAAGR,SAAS,CAAEQ,GAAG,CAAE,GAAGP,MAAM,CAAEO,GAAG,CAAE,IAAKR,SAAS,CAAEQ,GAAG,CAAE,GAAGP,MAAM,CAAEO,GAAG,CAAE,CAAE,EAAGY,OAAO,CAAE,CAAE,CAAC;MAC/G,IAAK7B,KAAK,CAAEW,QAAQ,CAAEM,GAAG,CAAG,CAAC,EAAGN,QAAQ,CAAEM,GAAG,CAAE,GAAG,CAAC;IACrD;IACA;IACA,KAAMhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,UAAU,EAAE5C,CAAC,IAAI,CAAC,EAAG;MACpCyD,YAAY,IAAMjB,SAAS,CAAEG,MAAM,CAAE3C,CAAC,CAAE,CAAE,GAAG4C,UAAY;MACzDc,SAAS,IAAMjB,MAAM,CAAEE,MAAM,CAAE3C,CAAC,CAAE,CAAE,GAAG4C,UAAY;MACnDe,WAAW,IAAMjB,QAAQ,CAAEC,MAAM,CAAE3C,CAAC,CAAE,CAAE,GAAG4C,UAAY;IACzD;IACA;IACA,OACE;MACE;MACAa,YAAY,EAAE,CAACA,YAAY,CAACG,OAAO,CAAE,CAAE,CAAC;MACxCF,SAAS,EAAE,CAACA,SAAS,CAACE,OAAO,CAAE,CAAE,CAAC;MAClCD,WAAW,EAAE,CAACA,WAAW,CAACC,OAAO,CAAE,CAAE,CAAC;MACtCC,OAAO,EAAE;QACP;QACAC,eAAe,EAAEvB,EAAE;QACnB;QACAC,SAAS,EAAEA,SAAS;QACpBC,MAAM,EAAEA,MAAM;QACdC,QAAQ,EAAEA;MACZ;IACF,CAAC;EAEL,CAAC,CAAC,CAAC;;EAEH,IAAK,CAAChF,OAAO,CAACkE,QAAQ,CAACnD,OAAO,CAAE2D,WAAY,CAAC,EAAG;IAC9C,MAAM2B,KAAK,CAAE,gDAAiD,CAAC;EACjE;EACA,IAAK3B,WAAW,CAAClE,MAAM,GAAG,CAAC,EAAG;IAC5B,MAAM6F,KAAK,CAAE,uDAAwD,CAAC;EACxE;EACApB,MAAM,GAAGP,WAAW;EACpBQ,UAAU,GAAGD,MAAM,CAACzE,MAAM;EAE1B6E,KAAK,CAAC,CAAC;EAEPD,OAAO,CAACC,KAAK,GAAGA,KAAK;EACrBD,OAAO,CAACK,QAAQ,GAAGA,QAAQ;EAC3BL,OAAO,CAACQ,OAAO,GAAGA,OAAO;EAEzB,OAAOR,OAAO;AAChB,CAAC,CAAC,CAAC;;AAEH;;AAEApF,OAAO,CAACsG,MAAM,GAAGrG,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;AAEtC;AACA,IAAIqG,cAAc,GAAG,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvG,OAAO,CAACsG,MAAM,CAACE,SAAS,GAAG,UAAWC,GAAG,EAAG;EAC1C,OACEA,GAAG,CAACC,WAAW,CAAC,CAAC,CAACF,SAAS,CAAE,KAAM,CAAC,CAACG,OAAO,CAAEJ,cAAc,EAAE,EAAG,CAAC;AAEtE,CAAC,CAAC,CAAC;;AAEHK,MAAM,CAACC,OAAO,GAAG7G,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}