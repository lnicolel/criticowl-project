{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-sync */\n\nvar makeRegexes = function (config) {\n  var rgx = [];\n  var imax = config.length;\n  var i;\n  for (i = 0; i < imax; i += 1) {\n    rgx.push([new RegExp(config[i][0], config[i][1]), config[i][2]]);\n  }\n  return rgx;\n}; // makeRegexes()\n\nvar compileTRex = function (trex) {\n  var rtc;\n  var ltc;\n  var helpers = Object.create(null);\n  try {\n    rtc = makeRegexes(trex.rtc);\n    ltc = makeRegexes(trex.ltc);\n\n    // Helper regexes.\n    for (const h in trex.helpers) {\n      // eslint-disable-line guard-for-in\n      helpers[h] = new RegExp(trex.helpers[h][0], trex.helpers[h][1]);\n    }\n\n    // file = path.join( __dirname, 'languages', language, 'normalization-map.json' );\n    // nmap = JSON.parse( fs.readFileSync( file, 'utf8' ) );\n  } catch (ex) {\n    throw Error('wink-nlp: Invalid trex.\\n\\nDetails:\\n' + ex.message);\n  }\n  return {\n    rtc: rtc,\n    ltc: ltc,\n    helpers: helpers\n  };\n}; // readLangConfig()\n\nmodule.exports = compileTRex;","map":{"version":3,"names":["makeRegexes","config","rgx","imax","length","i","push","RegExp","compileTRex","trex","rtc","ltc","helpers","Object","create","h","ex","Error","message","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/compile-trex.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-sync */\n\n\nvar makeRegexes = function ( config ) {\n  var rgx = [];\n  var imax = config.length;\n  var i;\n\n  for ( i = 0; i < imax; i += 1 ) {\n    rgx.push( [ ( new RegExp( config[ i ][ 0 ], config[ i ][ 1 ] ) ), config[ i ][ 2 ] ] );\n  }\n  return rgx;\n}; // makeRegexes()\n\nvar compileTRex =  function ( trex ) {\n  var rtc;\n  var ltc;\n  var helpers = Object.create( null );\n\n  try {\n    rtc = makeRegexes( trex.rtc );\n\n    ltc = makeRegexes( trex.ltc );\n\n    // Helper regexes.\n    for ( const h in trex.helpers ) { // eslint-disable-line guard-for-in\n      helpers[ h ] = new RegExp( trex.helpers[ h ][ 0 ], trex.helpers[ h ][ 1 ] );\n    }\n\n    // file = path.join( __dirname, 'languages', language, 'normalization-map.json' );\n    // nmap = JSON.parse( fs.readFileSync( file, 'utf8' ) );\n  } catch ( ex ) {\n    throw Error( 'wink-nlp: Invalid trex.\\n\\nDetails:\\n' + ex.message );\n  }\n  return  { rtc: rtc, ltc: ltc, helpers: helpers };\n}; // readLangConfig()\n\nmodule.exports = compileTRex;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA,IAAIA,WAAW,GAAG,SAAAA,CAAWC,MAAM,EAAG;EACpC,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,IAAI,GAAGF,MAAM,CAACG,MAAM;EACxB,IAAIC,CAAC;EAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,EAAEE,CAAC,IAAI,CAAC,EAAG;IAC9BH,GAAG,CAACI,IAAI,CAAE,CAAI,IAAIC,MAAM,CAAEN,MAAM,CAAEI,CAAC,CAAE,CAAE,CAAC,CAAE,EAAEJ,MAAM,CAAEI,CAAC,CAAE,CAAE,CAAC,CAAG,CAAC,EAAIJ,MAAM,CAAEI,CAAC,CAAE,CAAE,CAAC,CAAE,CAAG,CAAC;EACxF;EACA,OAAOH,GAAG;AACZ,CAAC,CAAC,CAAC;;AAEH,IAAIM,WAAW,GAAI,SAAAA,CAAWC,IAAI,EAAG;EACnC,IAAIC,GAAG;EACP,IAAIC,GAAG;EACP,IAAIC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;EAEnC,IAAI;IACFJ,GAAG,GAAGV,WAAW,CAAES,IAAI,CAACC,GAAI,CAAC;IAE7BC,GAAG,GAAGX,WAAW,CAAES,IAAI,CAACE,GAAI,CAAC;;IAE7B;IACA,KAAM,MAAMI,CAAC,IAAIN,IAAI,CAACG,OAAO,EAAG;MAAE;MAChCA,OAAO,CAAEG,CAAC,CAAE,GAAG,IAAIR,MAAM,CAAEE,IAAI,CAACG,OAAO,CAAEG,CAAC,CAAE,CAAE,CAAC,CAAE,EAAEN,IAAI,CAACG,OAAO,CAAEG,CAAC,CAAE,CAAE,CAAC,CAAG,CAAC;IAC7E;;IAEA;IACA;EACF,CAAC,CAAC,OAAQC,EAAE,EAAG;IACb,MAAMC,KAAK,CAAE,uCAAuC,GAAGD,EAAE,CAACE,OAAQ,CAAC;EACrE;EACA,OAAQ;IAAER,GAAG,EAAEA,GAAG;IAAEC,GAAG,EAAEA,GAAG;IAAEC,OAAO,EAAEA;EAAQ,CAAC;AAClD,CAAC,CAAC,CAAC;;AAEHO,MAAM,CAACC,OAAO,GAAGZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}