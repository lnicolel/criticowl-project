{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar locate = require('./locate.js');\n\n// ## containedMarkings\n/**\n *\n * Returns the range of contained markings, if any within the span defined by the\n * `start` and the `end`.\n *\n * @param {array} markings from where contained ones will be returned, if any.\n * @param {number} start The start of the span.\n * @param {number} end The end of the span.\n * @return {array} range of contained markings, `null` if none are contained.\n * @private\n*/\nvar containedMarkings = function (markings, start, end) {\n  if (markings === undefined || start === undefined || end === undefined) {\n    return null;\n  }\n\n  // Left & right indexes into the `markings` array.\n  var left = locate(start, markings);\n  var right = locate(end, markings);\n  var maxIndex = markings.length - 1;\n  var kl, kr;\n\n  // Return just the text if span is completely on the left or right side of the\n  // `markings`.\n  if (left < 0 && right < 0 || left > maxIndex && right > maxIndex) {\n    return null;\n  }\n\n  // The `left` must move to the next integer value to get the first index.\n  // To avoid `-0`!\n  kl = left < 0 ? 0 : Math.ceil(left);\n\n  // If both `left` and `right` are fractions & equal means nothing is contained.\n  // Return just the text, no markups!\n  if (left === right && kl !== left) {\n    return null;\n  }\n  kr = Math.floor(right);\n  // Mark those markings, which are completely contained in the closed interval\n  // `[ start, end ]` i.e. no partially contained markings.\n  if (markings[kl][0] < start) kl += 1;\n  if (markings[kr][1] > end) kr -= 1;\n  if (kl > kr) {\n    return null;\n  }\n  var range = Object.create(null);\n  range.left = kl;\n  range.right = kr;\n  return range;\n}; // containedMarkings\n\nmodule.exports = containedMarkings;","map":{"version":3,"names":["locate","require","containedMarkings","markings","start","end","undefined","left","right","maxIndex","length","kl","kr","Math","ceil","floor","range","Object","create","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/contained-markings.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar locate = require( './locate.js' );\n\n// ## containedMarkings\n/**\n *\n * Returns the range of contained markings, if any within the span defined by the\n * `start` and the `end`.\n *\n * @param {array} markings from where contained ones will be returned, if any.\n * @param {number} start The start of the span.\n * @param {number} end The end of the span.\n * @return {array} range of contained markings, `null` if none are contained.\n * @private\n*/\nvar containedMarkings = function ( markings, start, end ) {\n  if ( markings === undefined || start === undefined || end === undefined ) {\n    return null;\n  }\n\n  // Left & right indexes into the `markings` array.\n  var left = locate( start, markings );\n  var right = locate( end, markings );\n  var maxIndex = markings.length - 1;\n  var kl, kr;\n\n  // Return just the text if span is completely on the left or right side of the\n  // `markings`.\n  if ( ( left < 0 && right < 0 ) || ( left > maxIndex && right > maxIndex ) ) {\n    return null;\n  }\n\n  // The `left` must move to the next integer value to get the first index.\n  // To avoid `-0`!\n  kl = ( left < 0 ) ? 0 : Math.ceil( left );\n\n  // If both `left` and `right` are fractions & equal means nothing is contained.\n  // Return just the text, no markups!\n  if ( ( left === right ) && ( kl !== left ) ) {\n    return null;\n  }\n\n  kr = Math.floor( right );\n  // Mark those markings, which are completely contained in the closed interval\n  // `[ start, end ]` i.e. no partially contained markings.\n  if ( markings[ kl ][ 0 ] < start ) kl += 1;\n  if ( markings[ kr ][ 1 ] > end )   kr -= 1;\n  if ( kl > kr ) {\n    return null;\n  }\n\n  var range = Object.create( null );\n  range.left = kl;\n  range.right = kr;\n\n  return range;\n}; // containedMarkings\n\nmodule.exports = containedMarkings;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAE,aAAc,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,SAAAA,CAAWC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAG;EACxD,IAAKF,QAAQ,KAAKG,SAAS,IAAIF,KAAK,KAAKE,SAAS,IAAID,GAAG,KAAKC,SAAS,EAAG;IACxE,OAAO,IAAI;EACb;;EAEA;EACA,IAAIC,IAAI,GAAGP,MAAM,CAAEI,KAAK,EAAED,QAAS,CAAC;EACpC,IAAIK,KAAK,GAAGR,MAAM,CAAEK,GAAG,EAAEF,QAAS,CAAC;EACnC,IAAIM,QAAQ,GAAGN,QAAQ,CAACO,MAAM,GAAG,CAAC;EAClC,IAAIC,EAAE,EAAEC,EAAE;;EAEV;EACA;EACA,IAAOL,IAAI,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,IAAQD,IAAI,GAAGE,QAAQ,IAAID,KAAK,GAAGC,QAAU,EAAG;IAC1E,OAAO,IAAI;EACb;;EAEA;EACA;EACAE,EAAE,GAAKJ,IAAI,GAAG,CAAC,GAAK,CAAC,GAAGM,IAAI,CAACC,IAAI,CAAEP,IAAK,CAAC;;EAEzC;EACA;EACA,IAAOA,IAAI,KAAKC,KAAK,IAAQG,EAAE,KAAKJ,IAAM,EAAG;IAC3C,OAAO,IAAI;EACb;EAEAK,EAAE,GAAGC,IAAI,CAACE,KAAK,CAAEP,KAAM,CAAC;EACxB;EACA;EACA,IAAKL,QAAQ,CAAEQ,EAAE,CAAE,CAAE,CAAC,CAAE,GAAGP,KAAK,EAAGO,EAAE,IAAI,CAAC;EAC1C,IAAKR,QAAQ,CAAES,EAAE,CAAE,CAAE,CAAC,CAAE,GAAGP,GAAG,EAAKO,EAAE,IAAI,CAAC;EAC1C,IAAKD,EAAE,GAAGC,EAAE,EAAG;IACb,OAAO,IAAI;EACb;EAEA,IAAII,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;EACjCF,KAAK,CAACT,IAAI,GAAGI,EAAE;EACfK,KAAK,CAACR,KAAK,GAAGI,EAAE;EAEhB,OAAOI,KAAK;AACd,CAAC,CAAC,CAAC;;AAEHG,MAAM,CAACC,OAAO,GAAGlB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}