{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require('../its.js');\nvar as = require('../as.js');\nvar allowed = require('../allowed.js');\nvar colTokensOut = require('./col-tokens-out.js');\n\n// ## itmEntityOut\n/**\n * Out method for an entity. Note: the out always returns a Javascript\n * data type or data structure. There is no word vector support for entity.\n * @param  {number}   index       The index of desired entity.\n * @param  {Object}   entities    The entities from the `rdd`; could be custom.\n * @param  {Object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @return {*}                    Mapped value.\n * @private\n */\nvar itmEntityOut = function (index, entities, rdd, itsf) {\n  var entity = entities[index];\n  var itsfn = itsf && allowed.its4entity.has(itsf) ? itsf : its.value;\n  var detail;\n  if (itsfn === its.detail) {\n    // In case of `detail`, return an object containing entity's `text` & `type`.\n    detail = Object.create(null);\n    detail.value = colTokensOut(entity[0], entity[1], rdd, its.value, as.text);\n    detail.type = entity[2];\n    return detail;\n  }\n  if (itsfn === its.type) {\n    // Extract `type` and return directly.\n    return entity[2];\n  }\n  if (itsfn === its.span) {\n    // Extract span and return.\n    return its.span(entity);\n  }\n\n  // Balance cases ( i.e. value, normal, and type ) are handled via `colTokensOut()`.\n  return colTokensOut(entity[0], entity[1], rdd, itsfn, as.text);\n}; // itmEntityOut()\n\nmodule.exports = itmEntityOut;","map":{"version":3,"names":["its","require","as","allowed","colTokensOut","itmEntityOut","index","entities","rdd","itsf","entity","itsfn","its4entity","has","value","detail","Object","create","text","type","span","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/api/itm-entity-out.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar colTokensOut = require( './col-tokens-out.js' );\n\n// ## itmEntityOut\n/**\n * Out method for an entity. Note: the out always returns a Javascript\n * data type or data structure. There is no word vector support for entity.\n * @param  {number}   index       The index of desired entity.\n * @param  {Object}   entities    The entities from the `rdd`; could be custom.\n * @param  {Object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @return {*}                    Mapped value.\n * @private\n */\nvar itmEntityOut = function ( index, entities, rdd, itsf ) {\n  var entity = entities[ index ];\n  var itsfn = ( itsf && allowed.its4entity.has( itsf ) ) ? itsf : its.value;\n  var detail;\n\n  if ( itsfn === its.detail ) {\n    // In case of `detail`, return an object containing entity's `text` & `type`.\n    detail = Object.create( null );\n    detail.value = colTokensOut( entity[ 0 ], entity[ 1 ], rdd, its.value, as.text );\n    detail.type = entity[ 2 ];\n    return detail;\n  }\n\n  if ( itsfn === its.type ) {\n    // Extract `type` and return directly.\n    return entity[ 2 ];\n  }\n\n  if ( itsfn === its.span ) {\n    // Extract span and return.\n    return its.span( entity );\n  }\n\n  // Balance cases ( i.e. value, normal, and type ) are handled via `colTokensOut()`.\n  return colTokensOut( entity[ 0 ], entity[ 1 ], rdd, itsfn, as.text );\n}; // itmEntityOut()\n\nmodule.exports = itmEntityOut;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAE,WAAY,CAAC;AAChC,IAAIC,EAAE,GAAGD,OAAO,CAAE,UAAW,CAAC;AAC9B,IAAIE,OAAO,GAAGF,OAAO,CAAE,eAAgB,CAAC;AACxC,IAAIG,YAAY,GAAGH,OAAO,CAAE,qBAAsB,CAAC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,YAAY,GAAG,SAAAA,CAAWC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAG;EACzD,IAAIC,MAAM,GAAGH,QAAQ,CAAED,KAAK,CAAE;EAC9B,IAAIK,KAAK,GAAKF,IAAI,IAAIN,OAAO,CAACS,UAAU,CAACC,GAAG,CAAEJ,IAAK,CAAC,GAAKA,IAAI,GAAGT,GAAG,CAACc,KAAK;EACzE,IAAIC,MAAM;EAEV,IAAKJ,KAAK,KAAKX,GAAG,CAACe,MAAM,EAAG;IAC1B;IACAA,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;IAC9BF,MAAM,CAACD,KAAK,GAAGV,YAAY,CAAEM,MAAM,CAAE,CAAC,CAAE,EAAEA,MAAM,CAAE,CAAC,CAAE,EAAEF,GAAG,EAAER,GAAG,CAACc,KAAK,EAAEZ,EAAE,CAACgB,IAAK,CAAC;IAChFH,MAAM,CAACI,IAAI,GAAGT,MAAM,CAAE,CAAC,CAAE;IACzB,OAAOK,MAAM;EACf;EAEA,IAAKJ,KAAK,KAAKX,GAAG,CAACmB,IAAI,EAAG;IACxB;IACA,OAAOT,MAAM,CAAE,CAAC,CAAE;EACpB;EAEA,IAAKC,KAAK,KAAKX,GAAG,CAACoB,IAAI,EAAG;IACxB;IACA,OAAOpB,GAAG,CAACoB,IAAI,CAAEV,MAAO,CAAC;EAC3B;;EAEA;EACA,OAAON,YAAY,CAAEM,MAAM,CAAE,CAAC,CAAE,EAAEA,MAAM,CAAE,CAAC,CAAE,EAAEF,GAAG,EAAEG,KAAK,EAAET,EAAE,CAACgB,IAAK,CAAC;AACtE,CAAC,CAAC,CAAC;;AAEHG,MAAM,CAACC,OAAO,GAAGjB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}