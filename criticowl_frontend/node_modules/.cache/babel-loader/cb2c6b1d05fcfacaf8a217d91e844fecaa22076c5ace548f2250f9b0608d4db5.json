{"ast":null,"code":"//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## selGetItemAt\n/**\n * Obtains an item at the specified index from a collection.\n * @param  {number}   k         Relative index of the required item.\n * @param  {number[]} selection Array containing indexes to the selected items.\n * @param  {function} itemFn    Item function to create chainable-methods of the item.\n * @return {object}             Object containing the applicable chainable-methods\n *                              for the item found at `k`; otherwise `undefined`.\n * @private\n */\nvar selGetItemAt = function (k, selection, itemFn) {\n  if (k < 0 || k >= selection.length) {\n    throw Error(`wink-nlp: wink-nlp: ${k} is an invalid or out of bounds index.`);\n  } else return itemFn(selection[k]);\n}; // selGetItemAt()\n\nmodule.exports = selGetItemAt;","map":{"version":3,"names":["selGetItemAt","k","selection","itemFn","length","Error","module","exports"],"sources":["C:/Users/cheko/Desktop/Education/Freelance/criticowl-main/criticowl_frontend/node_modules/wink-nlp/src/api/sel-get-item.js"],"sourcesContent":["//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp”.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## selGetItemAt\n/**\n * Obtains an item at the specified index from a collection.\n * @param  {number}   k         Relative index of the required item.\n * @param  {number[]} selection Array containing indexes to the selected items.\n * @param  {function} itemFn    Item function to create chainable-methods of the item.\n * @return {object}             Object containing the applicable chainable-methods\n *                              for the item found at `k`; otherwise `undefined`.\n * @private\n */\nvar selGetItemAt = function ( k, selection, itemFn ) {\n  if ( k < 0 || k >= selection.length ) {\n    throw Error( `wink-nlp: wink-nlp: ${k} is an invalid or out of bounds index.`);\n  } else return itemFn( selection[ k ] );\n}; // selGetItemAt()\n\nmodule.exports = selGetItemAt;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,YAAY,GAAG,SAAAA,CAAWC,CAAC,EAAEC,SAAS,EAAEC,MAAM,EAAG;EACnD,IAAKF,CAAC,GAAG,CAAC,IAAIA,CAAC,IAAIC,SAAS,CAACE,MAAM,EAAG;IACpC,MAAMC,KAAK,CAAG,uBAAsBJ,CAAE,wCAAuC,CAAC;EAChF,CAAC,MAAM,OAAOE,MAAM,CAAED,SAAS,CAAED,CAAC,CAAG,CAAC;AACxC,CAAC,CAAC,CAAC;;AAEHK,MAAM,CAACC,OAAO,GAAGP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}